From: =?UTF-8?q?J=C3=A9r=C3=A9my=20Bobbio?= <lunar@debian.org>
Date: Fri, 15 Apr 2011 18:03:45 +0200
Subject: [PATCH] Add generic clock retrieval function

In case of unknown architecture, we now fallback on a generic implementation
for HARDCLOCK(). It uses microseconds returned by gettimeofday(2).

This implementation comes from the HAVEGE implementation present in PolarSSL.
Copyright (C) 2006-2009, Paul Bakker, licensed under the GNU Public License
version 2 or later.

Closes: #576375
---
 configure.ac        |    4 ++--
 src/havegecollect.c |   23 +++++++++++++++++++++++
 src/havegecollect.h |    7 +++++++
 3 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 0390263..ad5652b 100644
--- a/configure.ac
+++ b/configure.ac
@@ -46,8 +46,8 @@ case "$host" in
  ;;
 
  *)
-    echo "Unsupported host: $host";
-    exit 1
+    echo "Using generic hardclock ($host unknown)";
+    HA_CPPFLAGS="-DHAVE_ISA_GENERIC"
  ;;
 
 esac
diff --git a/src/havegecollect.c b/src/havegecollect.c
index 8c6f6ca..07f28be 100644
--- a/src/havegecollect.c
+++ b/src/havegecollect.c
@@ -245,3 +245,26 @@ static volatile int *havege_tune(H_PTR hptr)
    offs = (int)((((long)&p[4096])&0xfff)/sizeof(int));
    return &p[4096-offs];
 }
+
+#ifdef HAVE_ISA_GENERIC
+static int hardclock_init = 0;
+static struct timeval tv_init;
+
+/**
+ * Generic time retrieval function, using gettimeofday().
+ * Implementation has been copied from PolarSSL HAVEGE implementation.
+ */
+static unsigned long hardclock_generic(void)
+{
+   struct timeval tv_cur;
+
+   if (hardclock_init == 0) {
+      gettimeofday(&tv_init, NULL);
+      hardclock_init = 1;
+   }
+
+   gettimeofday(&tv_cur, NULL);
+   return ((tv_cur.tv_sec - tv_init.tv_sec) * 1000000
+          + (tv_cur.tv_usec - tv_init.tv_usec));
+}
+#endif
diff --git a/src/havegecollect.h b/src/havegecollect.h
index 46e636d..489f1fa 100644
--- a/src/havegecollect.h
+++ b/src/havegecollect.h
@@ -90,6 +90,13 @@
 #define HARDCLOCK(x) ASM("mov %0=ar.itc" : "=r"(x))
 #define HASCPUID(x) x=1
 #endif
+
+#ifdef HAVE_ISA_GENERIC
+#define ARCH "generic"
+#define HARDCLOCK(x) (x = hardclock_generic())
+static unsigned long hardclock_generic(void);
+#endif
+
 /**
  *  Use gcc's "&&" extension to calculate the LOOP_PT
  */
-- 
